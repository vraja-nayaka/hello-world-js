export default [
    `'ФУНКЦИИ (function)'

// Функция создается (объявляется) с помощью ключевого слова function:
function example() {}

// ? С какого слова начинается создание функции?
§§let±§function±func§§;
`,
    `// Отлично!
// В нашем случае example - это название функции, оно может быть практически любым.
// Разработчик сам его придумывает. Об этом мы еще поговорим

// ? Давай объявим функцию с названием myFunction
§>function±myFunction±() {}§>
`,
    `// ? Теперь объявим другую функцию - myFunction2
§>function±myFunction2±()±{}§>
`,
    `// Прекрасно!
// Заметь, при объявлении функции есть два вида скобок - сперва круглые, потом фигурные

// Сперва разберем фигурные скобки
// ! Все что внутри фигурных скобок называют "телом функции"

// Объявим функциию sayHi
function sayHi() {
    console.log('Привет!');
}

// ? Что здесь к чему относится?

§~function±Ключевое слово для создания§sayHi±Название фунции§console.log('Привет!');±Тело функции§~
`,
    `// Замечательно! 
// ? В каких скобках находится тело функции?
§§§{}±()±[]±<>§§;
`,
    `// Верно! В теле фунции можно расположить любой код, например:

function printHello() {
    console.log('Привет! 👋');
    // это просто комментарий внутри тела функции
    // строк в теле может быть очень много
}

// Как видишь тело функции может быть большим

// ? Как думаешь сколько строк может быть в теле функции?
§§§Хоть сколько±то 1 до 4±от 0 до 64±Строго больше 2§§;
`,
    `
// Мы хотим объявить функцию myFunction2, но тут чего-то не хватает
// ? Выбери чего не хватает в начале
§§()±{}±§function±console.log§§ myFunction2() {
    // Тут выполняются какие-то хитрые вычисления
}
`,
    `
// ? Выбери, что значит слово "объявить"?
§§§создать±изменить±высказаться±удалить§§;
`,
    `
// Теперь когда мы научились объявлять функции, можем их вызывать

// ! Функция сперва объявляется (создается), а затем вызывается (выполняется)

// Вызовем функию printHello
printHello();

// При вызове функции выполняется код, который лежит в ее теле
// То есть мы выведем в консоль строку 'Привет! 👋'

Какие скобки используются для вызова функции?
§§{}±§()±[]±<>§§;
`,
    `
// Функции нужны для переиспользования одного и того же кода много раз
// ! Ты можешь вызвать любую функцию сколько угодно еще раз

// Давай вызовем функцию printHello еще раз
§>printHello±(±);§>
`,

    // TODO: тут вспомнить как объявляются переменные сперва
    // `,
    //     `

    `
// Отлично, теперь создадим (объявим) функцию goHome
// ? Заполни недостающую первую строку.
§>function±goHome±(±)±{§>
  let time = '22:30'
  console.log('Я пришел домой в ' + time);
}
`,
    `// Как видишь внутри функции мы можем объявлять переменные (time) и использовать их
// Что выведет функция goHome?

goHome(); // -> §>'Я пришел домой в±22:30'±§time'§>
`,

    // TODO: про return - потом после замыканий и аргументов
    `
// В функции мы можем использовать ключевое слово return (вернуть)
// Оно нужно, чтобы вернуть из функции значение

function getNumber4() {
    return 9 + 4;
}

getNumber4(); // -> §§94±§13±"13"±17§§
`,
    `
// И мы можем даже сразу присвоить его переменной
let myNumber = getNumber4();
// ? Теперь myNumber будет равен 4, давай проверим:
§>console.log(±myNumber±)§>
`,
    `
`,
];
